# Maintainer: Martchus <martchus@gmx.net>

# All my PKGBUILDs are managed at https://github.com/Martchus/PKGBUILDs where
# you also find the URL of a binary repository.

# This file is created from PKGBUILD.sh.ep contained by the mentioned repository.
# Do not edit it manually! See README.md in the repository's root directory
# for more information.

# All patches are managed at https://github.com/Martchus/qtbase

pkgname=static-compat-qt6-base
_qtver=6.6.2
pkgver=${_qtver/-/}
pkgrel=1
arch=(x86_64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework'
depends=(shared-mime-info
         static-compat-brotli static-compat-dbus static-compat-double-conversion
         static-compat-fontconfig static-compat-libb2 static-compat-libglvnd
         static-compat-libice static-compat-libinput static-compat-libjpeg-turbo
         static-compat-libxdamage static-compat-libxkbcommon static-compat-libxmu
         static-compat-libxxf86vm static-compat-md4c static-compat-pcre2
         static-compat-sqlite static-compat-xcb-util-image static-compat-xcb-util-keysyms
         static-compat-xcb-util-renderutil static-compat-xcb-util-cursor static-compat-vulkan-headers
         static-compat-xcb-util-wm static-compat-xorgproto static-compat-xtrans)
makedepends=(static-compat-cmake xdg-utils ninja)
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
_pkgfqn="qtbase-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz"
        '0001-Use-CMake-s-default-import-library-suffix.patch'
        '0002-Fix-finding-D-Bus.patch'
        '0003-Fix-using-static-PCRE2-and-DBus-1.patch'
        '0004-Fix-transitive-dependencies-of-static-libraries.patch'
        '0005-Fix-libjpeg-workaround-for-conflict-with-rpcndr.h.patch'
        '0006-Support-finding-static-MariaDB-client-library.patch'
        '0007-Allow-overriding-CMAKE_FIND_LIBRARY_SUFFIXES-to-pref.patch'
        '0008-Fix-crashes-in-rasterization-code-using-setjmp.patch'
        '0009-Find-fontconfig-via-pkg-config-for-correct-handling-.patch'
        '0010-Fix-dependency-of-xcb-image-on-xcb-util.patch'
        '0011-Allow-using-properties-of-PkgConfig-targets-for-glib.patch'
        '0012-Allow-using-properties-of-PkgConfig-targets-for-Wayl.patch'
        '0013-Allow-overriding-preference-for-shared-libzstd-libra.patch')
sha256sums=('b89b426b9852a17d3e96230ab0871346574d635c7914480a2a27f98ff942677b'
            '5337bd308d6c6342b1a61cb45a6e435d706c2eb751ab93c9118322165370809a'
            'f1e013452ca62cccf9d17682701f67886173eb24e53b94ea0fe99a5edcb34d7a'
            '401d9275e9832c5000dd2b410158289b0cf853319da1a5ee97130598e28c0599'
            '404dc4efb1bdbdcaee2f0f8d561edf1b55a1050fab8e9a80c8eaf1c8aa816be2'
            'bfae4a5fb06153204e2b731ade3f169a6f4b5b44769f7b7cd420cf9d492ff830'
            '6bbf063870a45dd58be5ec849195b553ce8697985cca8441c18e5baccf67d449'
            '843b63b105767bf26c3d2e0fb65d4a9021aae598b7fbae8f501e848551e6bc6c'
            'a9c705a909876e20e0da2bf1137020b509e59fa25bb759831ce23f9b46576ffb'
            '6935ba318b0af86c40fca397e84046d004a23422b0c74187808133e5b1539b8c'
            'ba9fb48fb7ddeaa665e81136fa33377ba4fbf1efeb787c229cb091c33c1b31c6'
            '6fd11b4bdd602f0b17cc75f8fc0e999119d2606e16e6ebca5804865a4094c55c'
            'a589ff90a9be1c4b973e632f4b7419505a89406221a32c432aa9e72d59c8ef8f'
            '70f35a369aa9ee3d5b69ed036ee1091efc4535d727f6d05dd5737d2b81efe707')

prepare () {
  cd $_pkgfqn

  # apply patches; further descriptions can be found in patch files itself
  for patch in "$srcdir/"*.patch; do
    msg2 "Applying patch $patch"
    patch -p1 -i "$patch"
  done
}

build() {
  check_buildoption ccache y && ccache_args='
    -DCMAKE_C_COMPILER_LAUNCHER=ccache
    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache'
  source static-compat-environment
  export PATH=$PWD:$PATH
  printf '#!/usr/bin/bash\nexec /usr/bin/pkg-config --static "$@"\n' > pkg-config
  chmod +x pkg-config
  static-compat-cmake -G Ninja -B build -S $_pkgfqn \
    $ccache_args \
    -DCMAKE_SKIP_INSTALL_RPATH=ON \
    -DINSTALL_BINDIR=lib/qt6/bin \
    -DINSTALL_DOCDIR=share/doc/qt6 \
    -DINSTALL_ARCHDATADIR=lib/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_MKSPECSDIR=lib/qt6/mkspecs \
    -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    -DINPUT_openssl=linked \
    -DQT_FEATURE_openssl_linked=ON \
    -DQT_FEATURE_static_runtime=ON \
    -DQT_FEATURE_system_sqlite=ON \
    -DQT_FEATURE_system_xcb_xinput=ON \
    -DQT_FEATURE_xcb=ON \
    -DQT_FEATURE_xcb_sm=ON \
    -DQT_FEATURE_icu=OFF \
    -DQT_FEATURE_kms=OFF \
    -DQT_FEATURE_eglfs=OFF \
    -DQT_FEATURE_gbm=OFF \
    -DQT_FEATURE_linuxfb=OFF \
    -DQT_FEATURE_gssapi=OFF \
    -DQT_FEATURE_fontconfig=ON \
    -DQT_FEATURE_dynamicgl=OFF \
    -DQT_FEATURE_opengl_dynamic=OFF \
    -DGLIB2_USE_PKG_CONFIG=ON \
    -DWAYLAND_USE_PKG_CONFIG=ON \
    -DCMAKE_DISABLE_FIND_PACKAGE_harfbuzz=TRUE \
    -DCMAKE_INSTALL_OLDINCLUDEDIR=$static_compat_prefix/include \
    -DGSSAPI_INCLUDE_DIRS=$static_compat_prefix/include \
    -DICU_INCLUDE_DIR=$static_compat_prefix/include \
    -DLibdrm_INCLUDE_DIR=$static_compat_prefix/include \
    -DGLESv2_INCLUDE_DIR=$static_compat_prefix/include \
    -Dgbm_INCLUDE_DIR=$static_compat_prefix/include
  VERBOSE=1 cmake --build build
}

package() {
  source static-compat-environment
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfqn/LICENSES/* -t "$pkgdir"/usr/share/licenses/$pkgname

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "$pkgdir" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  rm -r "$pkgdir/$static_compat_prefix"/share/doc
}
